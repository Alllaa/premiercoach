import 'dart:convert';
import 'dart:io';
import 'package:dio/dio.dart';

import 'package:http/http.dart';
import 'package:premiercoach/app_class.dart';
import 'package:premiercoach/model/fixturesMatches.dart';
import 'package:premiercoach/model/teamRanking.dart';
import 'package:premiercoach/model/user.dart';

abstract class HomeRepository {
  Future<User> infoUser();
  Future<MatchInfoModel> matchesInfo();
  Future<List<Tabloue>> getTabloue();
}

class HomeApi implements HomeRepository {
  Client client = Client();
  String urlInfo = "https://footballcoach.herokuapp.com/personal/info";
  Dio dio = new Dio();
  @override
  Future<User> infoUser() async {
    try {
      final response =
          await client.get(urlInfo, headers: {
            'token':AppClass.token
          });
      print(json.decode(response.body));
      if (response.statusCode == 200) {
        client.close();
        return User.fromJson(json.decode(response.body));
      }
    } catch (e) {
      client.close();
      print(e.toString());
      throw Exception('Failed to load info of user');
    }
  }
  @override
  Future<List<Tabloue>> getTabloue() async{
    try {
      final response = await client.get(AppClass.tableUrl);
      return Autogenerated.fromJson(jsonDecode(response.body)).data.table;
    }
    catch(e){
      throw e;
    }
    finally {
      client.close();
    }
  }
  Future<MatchInfoModel> matchesInfo()async{
    print("URLS ${AppClass.fixturesUrl}");
    try{
      var response = await dio.get("${AppClass.fixturesUrl}");
      print("response ${response.statusCode}");

    if(response.statusCode == 200){
         return MatchInfoModel.fromJson(response.data);
      }else{
        print("response ${response.statusCode}");
      }
    }catch(e){
      print("Error ${e}");
    }
  }
}
